#!/usr/bin/env node
'use strict';

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

var _lockfile = require('lockfile');

var _lockfile2 = _interopRequireDefault(_lockfile);

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _package = require('../package.json');

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * LiskHQ/lisky
 * Copyright © 2017 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var nonInteractiveLiskyArg = process.argv[1];
// eslint-disable-next-line import/order

var nonInteractiveCommandArg = process.argv[2];

process.env.LISKY_CONFIG_DIR = process.env.LISKY_CONFIG_DIR || _os2.default.homedir() + '/.lisky';
var configLockfilePath = process.env.LISKY_CONFIG_DIR + '/config.lock';

process.env.NON_INTERACTIVE_MODE = !(nonInteractiveLiskyArg.endsWith('lisky') && process.argv.length === 2);

function exit(code) {
	process.exit(code || 0);
}

if (!_semver2.default.satisfies(process.version, _package2.default.engines.node)) {
	console.error('\x1b[31m', 'ERROR: Requires Node.js version ' + _semver2.default.clean(_package2.default.engines.node) + ', but was started with version ' + _semver2.default.clean(process.version) + '.', '\x1b[0m');
	exit();
}

switch (process.argv[2]) {
	case 'clean':
		console.warn('\x1b[33m', 'WARNING: Attempting to remove configuration lockfile. I hope you know what you’re doing.', '\x1b[0m');
		_lockfile2.default.unlockSync(configLockfilePath);
		exit();
		break;
	case '--version':
	case '-v':
		console.info(_package2.default.version);
		exit();
		break;
	default:
	// continue...
}

// eslint-disable-next-line import/extensions,import/no-unresolved
var lisky = require('../dist').default;
// eslint-disable-next-line import/extensions,import/no-unresolved
var execFile = require('../dist/exec_file').default;

// eslint-disable-next-line no-underscore-dangle
var firstCommandWords = lisky.commands.map(function (c) {
	return c._name.split(' ')[0];
});

var commandArgIsFilePath = false;
if (firstCommandWords.indexOf(nonInteractiveCommandArg) === -1) {
	commandArgIsFilePath = true;
	try {
		var nonInteractiveOptions = process.argv.slice(3);
		execFile(lisky, nonInteractiveCommandArg, nonInteractiveOptions, exit);
	} catch (error) {
		commandArgIsFilePath = false;
	}
}

if (!commandArgIsFilePath) {
	module.exports = process.env.NON_INTERACTIVE_MODE === 'true' ? lisky.parse(process.argv) : lisky;
}
